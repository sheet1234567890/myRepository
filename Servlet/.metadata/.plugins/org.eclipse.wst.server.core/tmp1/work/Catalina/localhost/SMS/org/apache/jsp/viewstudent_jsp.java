/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-05-30 08:28:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.dollop.app.bean.Student;
import javax.swing.text.StyledEditorKit.ForegroundAction;

public final class viewstudent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.dollop.app.bean.Student");
    _jspx_imports_classes.add("javax.swing.text.StyledEditorKit.ForegroundAction");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html xmlns:th=\"https://www.thymeleaf.org/\">>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("	<title>Home Page</title>\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table class=\"maintab\">\r\n");
      out.write("	<tr class=\"header\">\r\n");
      out.write("		<td class=\"headetab\" colspan=\"2\">\r\n");
      out.write("			<img class=\"clogo\" src=\"./images/logo.png\" alt=\"c-logo\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr class=\"middle\">\r\n");
      out.write("		<td class=\"leftsidebar\">\r\n");
      out.write("			<p class=\"navbar\">\r\n");
      out.write("				<li>\r\n");
      out.write("					<a href=\"addstudent.jsp\">ADD STUDENT</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>\r\n");
      out.write("					<!-- <a href=\"./StudentController?action=VIEWSTUDENTS\">VIEW STUDENT</a> -->\r\n");
      out.write("					<a href=\"./StudentController?action=PAGINATION&page=1\">listEmp</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			</p>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td class=\"contentarea\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		 ");
List<Student> list=(ArrayList)request.getAttribute("list");
		
      out.write(" \r\n");
      out.write("		\r\n");
      out.write("			<table id=\"dtBasicExample\" class=\"table table-striped table-bordered table-sm\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("  <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th class=\"th-sm\">Name\r\n");
      out.write("\r\n");
      out.write("      </th>\r\n");
      out.write("      <th class=\"th-sm\">Email\r\n");
      out.write("\r\n");
      out.write("      </th>\r\n");
      out.write("      <th class=\"th-sm\">Mobile\r\n");
      out.write("\r\n");
      out.write("      </th>\r\n");
      out.write("      <th class=\"th-sm\">Address\r\n");
      out.write("\r\n");
      out.write("      </th>\r\n");
      out.write("       <th class=\"th-sm\">Action\r\n");
      out.write("\r\n");
      out.write("      </th>\r\n");
      out.write("      \r\n");
      out.write("    </tr>\r\n");
      out.write("  </thead>\r\n");
      out.write("  <tbody>\r\n");
      out.write("  ");

  for (Student item : list) { 
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>");
      out.print(item.getSname());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(item.getSemail());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(item.getSmobile());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(item.getSaddress());
      out.write("</td>\r\n");
      out.write("      <td><a onclick=\"return confirm('are you sure update details')\"class=\"edit\" href=\"./StudentController?action=UPDATESTUDENT&id=");
      out.print(item.getSid());
      out.write("\">EDIT</a><a class=\"delete\" href=\"./StudentController?action=DELETESTUDENT&id=");
      out.print(item.getSid());
      out.write("\">DELETE</a></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    \r\n");
      out.write("    ");

    }
      out.write("\r\n");
      out.write("  \r\n");
      out.write("</table>\r\n");
      out.write("Total Rows:");
      out.print(request.getAttribute("totalrow") );
      out.write("\r\n");
      out.write("Total Page:");
      out.print(request.getAttribute("totalpage") );
      out.write("\r\n");
      out.write("NEXT:");
      out.print(request.getAttribute("page") );
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--  <a  href=\"./StudentController?action=PAGINATION&page=2\">2</a>..............................................\r\n");
      out.write("  <a  href=\"./StudentController?action=PAGINATION&page=3\">3</a>*********************************************** -->\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr class=\"footer\">\r\n");
      out.write("		<td class=\"footertab\" colspan=\"2\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
